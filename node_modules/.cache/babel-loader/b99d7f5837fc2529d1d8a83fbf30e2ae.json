{"ast":null,"code":"import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\nexport const fetchCartData = () => {\n  return async dispatch => {\n    const fetchData = async () => {\n      const response = await fetch(\"https://react-redux-shopping-app-default-rtdb.firebaseio.com/cart.json\");\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n\n      const data = await response.json();\n      return data;\n    };\n\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n        items: cartData.items\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Fetching cart data failed!\"\n      }));\n    }\n  };\n};\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending...\",\n      message: \"Sending cart data...\"\n    }));\n\n    const sendRequest = async () => {\n      const response = await fetch(\"https://react-redux-shopping-app-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify({\n          items: cart.items,\n          totalQuantity: cart.totalQuantity,\n          totalAmount: cart.totalAmount\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success!\",\n        message: \"Sent cart data successfully!\"\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Sending cart data failed!\"\n      }));\n    }\n  };\n};","map":{"version":3,"names":["uiActions","cartActions","fetchCartData","dispatch","fetchData","response","fetch","ok","Error","data","json","cartData","replaceCart","items","error","showNotification","status","title","message","sendCartData","cart","sendRequest","method","body","JSON","stringify","totalQuantity","totalAmount"],"sources":["/Users/kevseripek/Documents/web development/redux-refresher-app/src/store/cart-actions.js"],"sourcesContent":["import { uiActions } from \"./ui-slice\";\nimport { cartActions } from \"./cart-slice\";\n\nexport const fetchCartData = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(\n        \"https://react-redux-shopping-app-default-rtdb.firebaseio.com/cart.json\"\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Could not fetch cart data!\");\n      }\n      const data = await response.json();\n\n      return data;\n    };\n    try {\n      const cartData = await fetchData();\n      dispatch(cartActions.replaceCart({\n          items: cartData.items\n      }));\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Fetching cart data failed!\",\n        })\n      );\n    }\n  };\n};\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending...\",\n        message: \"Sending cart data...\",\n      })\n    );\n\n    const sendRequest = async () => {\n      const response = await fetch(\n        \"https://react-redux-shopping-app-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify({\n              items: cart.items,\n              totalQuantity: cart.totalQuantity,\n              totalAmount: cart.totalAmount,\n          }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending cart data failed!\");\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success!\",\n          message: \"Sent cart data successfully!\",\n        })\n      );\n    } catch (error) {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending cart data failed!\",\n        })\n      );\n    }\n  };\n};\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;EACjC,OAAO,MAAOC,QAAP,IAAoB;IACzB,MAAMC,SAAS,GAAG,YAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wEAD0B,CAA5B;;MAIA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,4BAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MAEA,OAAOD,IAAP;IACD,CAXD;;IAYA,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMP,SAAS,EAAhC;MACAD,QAAQ,CAACF,WAAW,CAACW,WAAZ,CAAwB;QAC7BC,KAAK,EAAEF,QAAQ,CAACE;MADa,CAAxB,CAAD,CAAR;IAGD,CALD,CAKE,OAAOC,KAAP,EAAc;MACdX,QAAQ,CACNH,SAAS,CAACe,gBAAV,CAA2B;QACzBC,MAAM,EAAE,OADiB;QAEzBC,KAAK,EAAE,QAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD;EACF,CA3BD;AA4BD,CA7BM;AA+BP,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAU;EACpC,OAAO,MAAOjB,QAAP,IAAoB;IACzBA,QAAQ,CACNH,SAAS,CAACe,gBAAV,CAA2B;MACzBC,MAAM,EAAE,SADiB;MAEzBC,KAAK,EAAE,YAFkB;MAGzBC,OAAO,EAAE;IAHgB,CAA3B,CADM,CAAR;;IAQA,MAAMG,WAAW,GAAG,YAAY;MAC9B,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAC1B,wEAD0B,EAE1B;QACEgB,MAAM,EAAE,KADV;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBZ,KAAK,EAAEO,IAAI,CAACP,KADK;UAEjBa,aAAa,EAAEN,IAAI,CAACM,aAFH;UAGjBC,WAAW,EAAEP,IAAI,CAACO;QAHD,CAAf;MAFR,CAF0B,CAA5B;;MAYA,IAAI,CAACtB,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;MACD;IACF,CAhBD;;IAiBA,IAAI;MACF,MAAMa,WAAW,EAAjB;MACAlB,QAAQ,CACNH,SAAS,CAACe,gBAAV,CAA2B;QACzBC,MAAM,EAAE,SADiB;QAEzBC,KAAK,EAAE,UAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD,CATD,CASE,OAAOJ,KAAP,EAAc;MACdX,QAAQ,CACNH,SAAS,CAACe,gBAAV,CAA2B;QACzBC,MAAM,EAAE,OADiB;QAEzBC,KAAK,EAAE,QAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD;EACF,CA5CD;AA6CD,CA9CM"},"metadata":{},"sourceType":"module"}